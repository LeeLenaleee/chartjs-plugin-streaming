(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{461:function(t,a,n){"use strict";n.r(a);var e=n(64),o=Object(e.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"stream-data"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#stream-data"}},[t._v("#")]),t._v(" Stream data")]),t._v(" "),n("p",[t._v("You can append the data in the "),n("code",[t._v("onRefresh")]),t._v(" callback function that is called at a regular interval. Each data has two properties - the timestamp of the data point, and the value of the data point.")]),t._v(" "),n("p",[t._v("Note that old data will be automatically deleted as it disappears off the chart.")]),t._v(" "),n("chart-editor",{attrs:{code:"// <block:config>\nconst config = {\n  type: 'line',\n  data: {\n    datasets: [\n      {\n        data: []\n      },\n      {\n        data: []\n      }\n    ]\n  },\n  options: {\n    scales: {\n      x: {\n        type: 'realtime',\n        realtime: {\n          onRefresh: chart => {\n            chart.data.datasets.forEach(dataset => {\n              dataset.data.push({\n                x: Date.now(),\n                y: Math.random()\n              });\n            });\n          }\n        }\n      }\n    }\n  }\n};\n// </block:config>\n\nconfig.options.plugins = {\n  annotation: false,\n  datalabels: false,\n  zoom: false\n};\n\nmodule.exports = {\n  config: config\n};\n"}})],1)}),[],!1,null,null,null);a.default=o.exports}}]);